    /* "C2.sol":27:305  contract C2 {... */
  mstore(0x40, 0x80)
  callvalue
    /* "--CODEGEN--":8:17   */
  dup1
    /* "--CODEGEN--":5:7   */
  iszero
  tag_1
  jumpi
    /* "--CODEGEN--":30:31   */
  0x0
    /* "--CODEGEN--":27:28   */
  dup1
    /* "--CODEGEN--":20:32   */
  revert
    /* "--CODEGEN--":5:7   */
tag_1:
    /* "C2.sol":27:305  contract C2 {... */
  pop
  dataSize(sub_0)
  dup1
  dataOffset(sub_0)
  0x0
  codecopy
  0x0
  return
stop

sub_0: assembly {
        /* "C2.sol":27:305  contract C2 {... */
      mstore(0x40, 0x80)
      jumpi(tag_1, lt(calldatasize, 0x4))
      calldataload(0x0)
      0x100000000000000000000000000000000000000000000000000000000
      swap1
      div
      0xffffffff
      and
      dup1
      0xb3de648b
      eq
      tag_2
      jumpi
    tag_1:
      0x0
      dup1
      revert
        /* "C2.sol":57:303  function f(uint x) public returns (uint r) {... */
    tag_2:
      callvalue
        /* "--CODEGEN--":8:17   */
      dup1
        /* "--CODEGEN--":5:7   */
      iszero
      tag_3
      jumpi
        /* "--CODEGEN--":30:31   */
      0x0
        /* "--CODEGEN--":27:28   */
      dup1
        /* "--CODEGEN--":20:32   */
      revert
        /* "--CODEGEN--":5:7   */
    tag_3:
        /* "C2.sol":57:303  function f(uint x) public returns (uint r) {... */
      pop
      tag_4
      0x4
      dup1
      calldatasize
      sub
      dup2
      add
      swap1
      dup1
      dup1
      calldataload
      swap1
      0x20
      add
      swap1
      swap3
      swap2
      swap1
      pop
      pop
      pop
      jump(tag_5)
    tag_4:
      mload(0x40)
      dup1
      dup3
      dup2
      mstore
      0x20
      add
      swap2
      pop
      pop
      mload(0x40)
      dup1
      swap2
      sub
      swap1
      return
    tag_5:
        /* "C2.sol":92:98  uint r */
      0x0
        /* "C2.sol":114:115  x */
      dup2
        /* "C2.sol":110:111  b */
      0x0
        /* "C2.sol":110:115  b = x */
      dup2
      swap1
      sstore
      pop
        /* "C2.sol":191:192  3 */
      0x3
        /* "C2.sol":188:189  1 */
      0x1
        /* "C2.sol":184:193  add(1, 3) */
      add
        /* "C2.sol":178:182  0x40 */
      0x40
        /* "C2.sol":171:194  mstore(0x40, add(1, 3)) */
      mstore
        /* "C2.sol":287:288  b */
      sload(0x0)
        /* "C2.sol":282:288  r  = b */
      swap1
      pop
        /* "C2.sol":57:303  function f(uint x) public returns (uint r) {... */
      swap2
      swap1
      pop
      jump	// out

    auxdata: 0xa165627a7a7230582034ec75095fd2fd58c0fd3e5f29da74a3f3a8c374f9ee8b1510eaea0117c520270029
}
